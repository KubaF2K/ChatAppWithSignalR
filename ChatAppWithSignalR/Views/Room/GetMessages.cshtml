@using ChatAppWithSignalR.Services.UserService
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@model ChatAppWithSignalR.ViewModels.RoomViewModel
@inject IUserService userService
@{
    ViewData["Title"] = "GetMessages";

    var userId = UserManager.GetUserId(User);

    var userPhotoBase64 = await userService.GetUserPhoto(userId);

}


<h2 class="chat-header text-white">Pokój @Model.RoomName</h2>

<div id="messageList" class="message-list">
    @foreach (var message in Model.Messages)
    {
        <div class="message-item">
            <p class="message-content text-white">
                <img src="data:image/jpeg;base64,@message.UserPhoto" alt="User Photo" class="rounded-circle" style="width: 30px; height: 30px; margin-right: 10px;">
                <strong>@message.UserId:</strong> 
                @message.MessageContent
            </p>
        </div>
    }
</div>

<form id="messageForm" method="post" class="message-form">
    @Html.AntiForgeryToken()
    <input type="text" name="message" id="messageInput" class="message-input" placeholder="Wpisz swoją wiadomość..." required />
    <button type="submit" class="send-button">Wyślij</button>
</form>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.start().then(function () {
            var roomId = "@Model.RoomId";

            connection.invoke("JoinGroup", roomId).catch(function (err) {
                return console.error(err.toString());
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("messageForm").addEventListener("submit", function (event) {
            event.preventDefault()

            var messageInput = document.getElementById("messageInput");
            var message = messageInput.value;
            var roomId = "@Model.RoomId";
            var userId = "@Model.UserId";

            connection.invoke("SendMessage", roomId, userId, message).catch(function (err) {
                return console.error(err.toString());
            });

            messageInput.value = "";
        });

        connection.on("ReceiveMessage", function (senderName, messageContent) {
            var messageList = document.getElementById("messageList");
            var messageItem = document.createElement("div");
            messageItem.className = "message-item";

            var p = document.createElement("p");
            p.className = "message-content text-white";

            var strong = document.createElement("strong");
            strong.textContent = senderName + ": ";
            var userPhotoBase64 = "@userPhotoBase64";

            var img = document.createElement("img");
            img.src = "data:image/jpeg;base64," + userPhotoBase64.replaceAll("&#x2B;", "+");
            img.alt = "User Photo";
            img.classList.add("rounded-circle");
            img.style.width = "30px";
            img.style.height = "30px";
            img.style.marginRight = "10px";
            p.appendChild(img);
            p.appendChild(strong);

            p.appendChild(document.createTextNode(messageContent));

            messageItem.appendChild(p);
            messageList.appendChild(messageItem);
        });

        window.onload = function () {
            var messageList = document.getElementById("messageList");

            // Scroll to the bottom once the page is fully loaded
            messageList.scrollTop = messageList.scrollHeight;
        };
    </script>
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f2f2f2;
        color: #333;
        margin: 0;
    }

    .chat-header {
        text-align: center;
        font-size: 1.5rem;
        margin-bottom: 20px;
        color: black;
    }

    .message-list {
        max-height: 400px;
        overflow-y: auto;
        background-color: #172a46;
        border: 1px solid #09182d;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 20px;
        box-shadow: 0 4px 40px rgba(10, 25, 47, 1);
        scroll-behavior: smooth;
    }

    .message-item {
        padding: 8px;
        border-bottom: 1px solid #eee;
    }

    .message-item:last-child {
        border-bottom: none;
    }

    .message-content {
        margin: 0;
        overflow-wrap: break-word;
    }

    .message-form {
        display: flex;
        justify-content: space-between;
    }

    .message-input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-right: 10px;
        font-size: 1rem;
    }

    .send-button {
        padding: 10px 15px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

    .send-button:hover {
        background-color: #45a049;
    }
</style>