@using ChatAppWithSignalR.Services.UserService
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IUserService userService

@{
    var userId = UserManager.GetUserId(User);
    
    var userPhotoBase64 = await userService.GetUserPhoto(userId);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Witaj @User.Identity?.Name!@if (!string.IsNullOrEmpty(userPhotoBase64))
                {
                    <img src="data:image/jpeg;base64,@userPhotoBase64" alt="User Photo" class="rounded-circle" style="width: 30px; height: 30px; margin-right: 10px;">
                }
            </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-white">Wyloguj</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Zaloguj</a>
    </li>
}
</ul>
